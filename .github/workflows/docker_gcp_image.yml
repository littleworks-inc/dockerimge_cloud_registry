name: GCPS Build and publish a Docker image
on:
  push:
    branches:
      - '*'

env:
    REGISTRY: northamerica-northeast2-docker.pkg.dev
    IMAGE_NAME: gcpcli
    COMPARE_TAG: latest
    SHA: ${{ github.event.after }}
jobs:
  build:
    name: GCPS Build & push docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
            ref: ${{ env.SHA }}

      - name: Debug
        run: |
          echo "github.ref -> {{ github.ref }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
            driver-opts: |
              image=moby/buildkit:v0.13.0

      - name: lint Action for GCP
        uses: hadolint/hadolint-action@v2.0.0
        with:
            dockerfile: gcp/Dockerfile
            ignore: DL3018,SC2046,DL4006
            failure-threshold: warning
            no-color : false
            no-fail: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # - name: Login to GCR
      #   id: login-gcr
      #   uses: docker/login-action@v3
      #   with:
      #     registry: northamerica-northeast2-docker.pkg.dev
      #     username: _json_key
      #     password: ${{ secrets.GOOGLE_CREDENTIALS }}
      - name: Set up Google Cloud authentication
        uses: google/cloud-actions/setup-gcloud@v0.3.1
        with:
          service_account_key: ${{ secrets.GOOGLE_CREDENTIALS }}
          project_id: nomadic-rush-408023

      - name: Set short sha
        id: sha_short
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      # - name: Build and push
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: gcp/
      #     push: true
      #     tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.sha_short.outputs.sha_short }}
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache
      #     provenance: false

      - name: Login to Docker
        run: echo $DOCKER_PASSWORD | docker login -u _json_key --password-stdin --username https://gcr.io

      - name: Build the Docker image
        run: docker build -t gcr.io/$PROJECT_ID/$IMAGE_NAME:${{ steps.sha_short.outputs.sha_short }} .

      - name: Push the Docker image to GCR
        run: docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:${{ steps.sha_short.outputs.sha_short }}

      - name: Run Trivy vulnerability scanner
        id: docker-scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.sha_short.outputs.sha_short }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'
